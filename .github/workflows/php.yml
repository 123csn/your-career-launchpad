name: PHP CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: career_launchpad_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, mysql, pdo_mysql
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      if: hashFiles('composer.json') != ''

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      if: hashFiles('composer.json') != ''

    - name: Run PHP Syntax Check
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;

    - name: Run PHP CodeSniffer
      run: |
        if [ -f composer.json ]; then
          composer require --dev squizlabs/php_codesniffer
          ./vendor/bin/phpcs --standard=PSR12 --extensions=php .
        fi

    - name: Run PHPUnit tests
      run: |
        if [ -f composer.json ]; then
          composer require --dev phpunit/phpunit
          ./vendor/bin/phpunit
        fi
      env:
        DB_HOST: 127.0.0.1
        DB_NAME: career_launchpad_test
        DB_USER: root
        DB_PASS: root

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Run Security Check
      uses: github/codeql-action/init@v2
      with:
        languages: php

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      run: echo "Deployment would happen here"
      # Add your deployment steps here
      # For example, deploy to Heroku, DigitalOcean, etc. 